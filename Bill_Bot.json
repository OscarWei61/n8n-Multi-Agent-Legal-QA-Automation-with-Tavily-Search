{
  "name": "Bill_Bot",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -480,
        -64
      ],
      "id": "cbec4bf4-4c13-4370-a7ac-88a2821c6854",
      "name": "When chat message received",
      "webhookId": "642ab20c-f3a3-4167-89fc-4ea2dc52333b"
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -192,
        -64
      ],
      "id": "5da546e2-33ca-4c81-b135-5df753b142f8",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -144,
        128
      ],
      "id": "7774a0a9-9d17-4098-b042-a262d2b794c2",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "query": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "max_results": 10
        }
      },
      "type": "@tavily/n8n-nodes-tavily.tavilyTool",
      "typeVersion": 1,
      "position": [
        528,
        256
      ],
      "id": "b2b99a9b-83de-4079-b380-52699e3fcef0",
      "name": "Search in Tavily",
      "credentials": {
        "tavilyApi": {
          "id": "up3UEUD7HwS3s5Ff",
          "name": "Tavily account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        336,
        -64
      ],
      "id": "3bcfc9da-8c9c-4450-b636-489d35a473f6",
      "name": "AI Agent1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -384,
        128
      ],
      "id": "8f6c8c57-75bb-4214-93ec-9bc022477c8b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "diXaVZ9oNNRBUFOx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        336,
        176
      ],
      "id": "d17132c9-52e4-40c7-bab3-9b7a9792f51e",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "diXaVZ9oNNRBUFOx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "你是一個querydecompose agent，請幫我把使用者的input，decompose成tavily好搜尋的query",
        "text": "=你是一個querydecompose agent，請幫我把使用者的input，decompose成tavily好搜尋的query，我主要要的是statement not question，如果問題很困難，可以使用越多query越好, use english to help me output query {{ $('When chat message received').item.json.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -128,
        304
      ],
      "id": "0a74ddc0-f00c-4942-91d6-b0de3c86072f",
      "name": "AI Agent Tool"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -144,
        480
      ],
      "id": "bcece7a8-6f2b-4332-ba28-3684dc8f624d",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "diXaVZ9oNNRBUFOx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"query\": [\"what is the latest bills\", \"what is insurance bill at illinois\"]\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        64,
        480
      ],
      "id": "2705cc78-e469-4e80-b105-7f78029a7427",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -16,
        688
      ],
      "id": "552d2ac2-943b-4c64-a19a-14e11be107a6",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "diXaVZ9oNNRBUFOx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }} please help me use those material to answer user question{{ $('When chat message received').item.json.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        688,
        -64
      ],
      "id": "5dbaffba-32b5-44c8-abe1-39ded2ef074b",
      "name": "AI Agent2",
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Search in Tavily": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d72283cd-a5bd-4703-ad6f-edcf57ff1942",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3597710b00f1a8d31683f0af03ee9d71c607a3a4f125b2ab4b105c12324ba61d"
  },
  "id": "me6TcWKJUEWfcSmE",
  "tags": []
}